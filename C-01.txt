Здравствуйте, коллеги, меня зовут Иван, и я рад приветствовать вас на
видеокурсе Основы Языка Си
{
Здравствуйте коллеги, меня зовут Иван, и я рад приветствовать вас на
видеокурсе "Основы Языка Си".
}

Коротко об истории языка:
	- Первая версия была разработана в 1972м году Деннисом Ритчи для программирования
	в недавно созданной на тот момент среде UNIX.
	{- Первая версия была разработана в 1972м году Деннисом Ритчи и Кеном Томпсоном для
	программирования в недавно созданной на тот момент среде UNIX(изначально UNICS, от
	MULTICS).
	ссылки:
	- язык си - https://ru.wikipedia.org/wiki/Си_(язык_программирования)
	- Кен Томпсон - https://ru.wikipedia.org/wiki/Томпсон,_Кен
	}
	- Разрабатывался не государством, а обычными практикующими программистами. В нём
	сразу были учтены и исправлены все неудобства существовавших на тот момент FORTRAN
	и PASCAL
	{
	- разрабатывался в Bell Labs - https://ru.wikipedia.org/wiki/Лаборатории_Белла
	- язык си - https://ru.wikipedia.org/wiki/Си_(язык_программирования)
	- про влияние фортрана и паскаля не уверен, особенно паскаля. Судя по википедии,
	влияние на развитие скорее оказал язык B. Пример дерева развития языков
	программирования - https://ds04.infourok.ru/uploads/ex/12d7/000a869e-5bef8abd/img3.jpg
	}
	- Поскольку интерес к языку со временем не пропадал, а технологии развивались,
	появились редакции языка, такие как С99 (1999 год) С11(2011 год)
	{
	- ну, если использовать редакции, то их было больше -
	https://ru.wikipedia.org/wiki/Си_(язык_программирования)
	}

Каковы возможности языка?
	- В языке С есть возможность работать с указателями на физические ячейки
	оперативной памяти компьютера. Конечно, это небезопасно, но при должной
	квалификации программиста позволяет получить максимально эффективный код, близкий
	к языку ассемблера и даже машинным кодам конкретного процессора
	{
	- думаю что вопросы безопасного доступа к памяти решаются на уровне компилятора. Ну
	по-крайней мере часть из них.
	}
	- С является компилируемым процедурным языком со строгой статической типизацией,
	что позволяет писать максимально безопасный код, и отсеять бОльшую часть ошибок
	ещё на этапе компиляции проекта

Что с его помощью можно сделать?
	- На языке С написано огромное количество программ, библиотек, и даже операционных
	систем. Какая-бы у Вас ни была установлена операционная система, очень вероятно, что
	она написана на С.
	- На языке С пишут драйверы для периферийного оборудования, программируют контроллеры
	для космической аппаратуры, пишут высокоскоростные приложения
	- Помимо уже сказанного, сейчас стремительно набирает популярность такое направление,
	как Умная техника и Интернет Вещей. Именно из-за этих трендов язык С за последние пару
	лет снова поднялся в рейтинге TIOBE на второе место
	{
	- Помимо уже сказанного, сейчас стремительно набирает популярность такое направление,
	как "Умная техника" и "Интернет Вещей". Именно из-за этих трендов язык С за последние
	пару лет снова поднялся в рейтинге TIOBE на второе место
	}

Какой бы язык программирования вы ни изучали, знание языка С нужно потому что
{
Какой бы язык программирования вы ни изучали, знание языка С нужно потому что:
}
	- Языки высокого уровня делают много вещей одной командой. Если Вы хотите не просто
	стать программистом, а быть хорошим программистом - вы должны понимать, что там
	происходит на самом деле.
	{
	Может стоит заменить на то что этот язык является для многих существующих на данный
	момент прародителем и как результат, пониманием основы помогает понять работу более
	новых языков?
	}
	- Знание языка С можно сравнить с умением ездить на автомобиле с механической коробкой
	передач: коробка-автомат резко снижает порог вхождения в участники дорожного движения,
	но, зачастую настолько ухудшает качество управления автомобилем, что это приводит к
	самым печальным последствиям.
	{
	А если студент не знает что такое механическая, а тем более коробка передач? :)
	Возможно стоит добаваить понимание работы с памятью компьютера?
	}
----------------------------------------------------
Для того чтобы начать писать программы на языке Си естественно нужно установить компилятор
и средУ разработки. Например кроссплатформенную средУ Эклипс. Рассмотрим её установку и
настройку на примере ОС убунту. Скачиваем дистрибутив с официального сайта. Компилятор
языка С поставляется с любым дистрибутивом Линукс об этом мы можем не беспокоиться.
Установка среды разработки - лучше QT Creator, так как он кроссплатформенный.
Еще нужно показать, как поставить Visual Studio

{
Как оказалось компилятор не поставляется по-умолчанию с Убунтой, его нужно установить
командой sudo apt install build-essential .
Примеры установок описаны в IC-ADSC-TD
}
